{"version":3,"sources":["components/SearchBar.js","components/About.js","components/SignIn.js","components/BusinessList.js","components/MapBody.js","components/MapPage.js","components/SearchPage.js","components/SearchButton.js","components/AboutPage.js","components/LoginPage.js","components/Main.js","App.js","index.js"],"names":["SearchBar","props","handleChange","e","setState","value","target","handleSubmit","preventDefault","state","passSubmit","this","onSubmit","Form","className","Group","Control","type","placeholder","onChange","Component","About","SignIn","BusinessList","console","log","searched","fakeRedirect","alert","map","data","business","tagMap","businessType","bus","style","cursor","href","featuredSpan","promoted","id","featuredClass","onClick","name","score","distance","resultBox","textAlign","results","length","display","MapBody","changeView","open","side","showingCondition","buttonTextCondition","MapPage","passed","currentSearch","passNavSubmit","handleAboutPageChange","handleSignInPageChange","areResults","PureComponent","SearchPage","currentTitle","usOptions","getNewOption","current","randomOption","Math","floor","random","newer","count","setTimeout","randomTime","interval","setInterval","clearInterval","handleMapPageChange","SearchButton","AboutPage","handleSearchPageChange","LoginPage","Label","Button","Main","currentPage","PageDisplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"09EAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOD,SAThB,EAYnBE,aAAe,SAACJ,GACZA,EAAEK,iBACC,EAAKC,MAAMJ,OAXd,EAAKI,MAAQ,CACRJ,MAAO,IAJG,E,0CAkBnB,WAEI,IAAMK,EAAaC,KAAKV,MAAMS,WACxBL,EAAQM,KAAKF,MAAMJ,MAEzB,OACI,qBAAKO,SAAY,kBAAMF,EAAWL,IAAlC,SACI,cAACQ,EAAA,EAAD,CAAMC,UAAU,aAAaF,SAAUD,KAAKJ,aAA5C,SACI,cAACM,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,QAAQC,YAAY,0CAA0CC,SAAUR,KAAKT,aAAcG,MAAOM,KAAKF,MAAMJ,kB,GA5BjHe,aCDxB,SAASC,IACpB,OACI,wBAAQP,UAAU,MAAlB,mBCFO,SAASQ,IACpB,OACI,wBAAQR,UAAU,MAAlB,qB,YCCaS,E,kDACjB,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IAQVkB,SAAW,SAAChB,GACRqB,QAAQC,IAAItB,EAAEG,OAAOD,OACrB,EAAKD,SAAS,CAACC,MAAMF,EAAEG,OAAOD,SAXf,EAcnBO,SAAW,SAACT,GACRA,EAAEK,iBACF,EAAKJ,SAAS,CACVsB,SAAU,EAAKjB,MAAMJ,SAdzB,EAAKI,MAAQ,CACTJ,MAAM,GACNqB,SAAU,IALC,E,0CAsBnB,WAEI,IAAMC,EAAe,WACjBC,MAAM,uCAQJC,EAAMC,EAAKD,KAAI,SAACE,GAElB,IAAMC,EAASD,EAASE,aAAaJ,KAAI,SAACK,GACtC,OAAQ,oBAAIpB,UAAU,qBAAd,SACI,oBAAGqB,MAAO,CAACC,OAAO,WAAYC,KAAK,IAAnC,eAA0CH,EAA1C,QADoCA,MAK9CI,EAAgBP,EAASQ,SAAY,sBAAMC,GAAG,WAAT,sBAAsC,KAC3EC,EAAiBV,EAASQ,SAAY,0BAA4B,yBAExE,OACY,oBAA4BzB,UAAW2B,EAAvC,SACI,sBAAK3B,UAAU,YAAf,UAEKwB,EAED,oBAAII,QAASf,EAAb,SACKI,EAASY,OAId,sBAAMH,GAAG,QAAT,SACI,+BACI,8BACST,EAASa,MADlB,cADJ,sBAQJ,8BACI,oBAAI9B,UAAU,aAAd,SACKkB,MAIT,qBAAKlB,UAAU,aAAf,SACI,qBAAIA,UAAU,aAAd,UACI,qBAAIA,UAAU,0BAAd,cAAyC,mBAAGuB,KAAK,IAAR,uBAAzC,QACA,qBAAIvB,UAAU,0BAAd,cAAyC,mBAAGuB,KAAK,IAAR,wBAAzC,UACA,qBAAIvB,UAAU,0BAAd,cAAyC,mBAAGuB,KAAK,IAAR,sBAAzC,UACA,qBAAIvB,UAAU,0BAAd,cAAyC,mBAAGuB,KAAK,IAAR,uBAAzC,mBA9BPN,EAASc,aAuC5BC,EAAY,sBAAKX,MAAO,CAACY,UAAU,UAAvB,0BACgBpC,KAAKF,MAAMiB,YAGvCsB,EAAUrC,KAAKF,MAAMiB,SAASuB,OAAS,EAAIH,EAAY,KAEjE,OACQ,qCACI,sBAAKhC,UAAU,oBAAf,UAEA,cAACD,EAAA,EAAD,CAAMsB,MAAO,CAACe,QAAS,UAAWtC,SAAUD,KAAKC,SAAjD,SACI,cAACC,EAAA,EAAKE,MAAN,CAAYD,UAAU,sBAAtB,SACI,cAACD,EAAA,EAAKG,QAAN,CAAcC,KAAK,QAAQC,YAAY,YAAYb,MAAOM,KAAKF,MAAMJ,MAAOc,SAAUR,KAAKQ,eAInG,wBAAQL,UAAU,MAAM4B,QAxEV,SAACvC,GACnBA,EAAEK,iBACFoB,MAAM,+JAsEF,0BAECoB,EACD,6BACKnB,W,GAzGqBT,aCFrB+B,E,kDACjB,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAOVmD,WAAa,SAACjD,GAEV,EAAKC,SAAS,CACViD,MAAO,EAAK5C,MAAM4C,QARtB,EAAK5C,MAAQ,CACR4C,MAAM,GAJI,E,0CAenB,WAII,IAAMC,EAAO,qBAAKxC,UAAU,WAAf,SACO,cAAC,EAAD,MAIdyC,EAAoB5C,KAAKF,MAAM4C,KAAQC,EAAO,KAC9CE,EAAuB7C,KAAKF,MAAM4C,KAAQ,oBAAsB,qBAGtE,OAEI,sBAAKvC,UAAU,gBAAf,UACKyC,EACD,yBAAQzC,UAAU,MAAM0B,GAAG,UAAUE,QAAS/B,KAAKyC,WAAnD,cAAiEI,EAAjE,c,GAjCqBpC,aCKhBqC,E,kDACjB,WAAYxD,GAAQ,IAAD,8BACnB,cAAMA,IAQNS,WAAa,SAACgD,GACV,EAAKtD,SAAS,CAACuD,cAAcD,KAVd,EAanBE,cAAgB,SAACF,GACblC,QAAQC,IAAIiC,GACZ,EAAKtD,SAAS,CAACuD,cAAcD,KAZ7B,EAAKjD,MAAQ,CACTkD,cAAe,IAJJ,E,0CAmBnB,WAEI,IAAME,EAAwBlD,KAAKV,MAAM4D,sBACnCC,EAAyBnD,KAAKV,MAAM6D,uBACpCC,EAAa,+CAAkBpD,KAAKF,MAAMkD,cAA7B,OAEbX,EAAUrC,KAAKF,MAAMkD,cAAcV,OAAS,EAAIc,EAAa,KAEnE,OACI,qCACI,sBAAKjD,UAAU,sBAAf,UAEI,sBAAKA,UAAU,kCAAf,UAEA,qBAAI0B,GAAG,iBAAP,qBACY,sBAAMA,GAAG,UAAT,mBAER,sBAAK1B,UAAU,4BAAf,UACI,qBAAK4B,QAAS,kBAAMmB,EAAsB,cAAc1B,MAAO,CAACe,QAAQ,UAAxE,SACI,cAAC7B,EAAD,MAEJ,qBAAKqB,QAAS,kBAAMoB,EAAuB,cAAc3B,MAAO,CAACe,QAAQ,UAAzE,SACI,cAAC5B,EAAD,YAKZ,qBAAKR,UAAU,sBAAf,SACI,cAAC,EAAD,CAAWJ,WAAYC,KAAKD,eAGhC,qBAAKI,UAAU,mBAAf,SACKkC,OAIT,qBAAKlC,UAAU,aAAf,SACI,cAAC,EAAD,a,GAzDiBkD,iBCHhBC,E,kDACjB,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IA2CVS,WAAa,SAACgD,GACV,EAAKtD,SAAS,CAACuD,cAAcD,IAC7BlC,QAAQC,IAAIiC,IA3CZ,EAAKjD,MAAQ,CACRyD,aAAc,KACdP,cAAe,MALL,E,qDASnB,WAAqB,IAAD,OAEVQ,EAAY,CAAC,YAAY,mBAAoB,aAAc,cAAe,aAEhF,SAASC,EAAaC,GAClB,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWN,EAAUlB,QACpDyB,EAAQP,EAAUG,GACxB,OAAGD,IAAYK,EACNN,EAAaC,GAEXK,EAIf,IAAIC,EAAQ,EAEZC,YAAW,WAEP,IAAIC,EAA6B,KAAhBN,KAAKE,SAAkB,KAElCK,EAAWC,aAAY,WACrBJ,IACAE,EAA6B,KAAhBN,KAAKE,SAAkB,KACpCE,EAAQ,GACR,EAAKvE,SAAS,CAAC8D,aAAa,OAC5Bc,cAAcF,IAEd,EAAK1E,SAAS,CACV8D,aAAcE,EAAa,EAAK3D,MAAM4D,aAG/CQ,KACJ,O,oBAQP,WAEI,IAAMhB,EAAwBlD,KAAKV,MAAM4D,sBACnCC,EAAyBnD,KAAKV,MAAM6D,uBACpCmB,EAAsBtE,KAAKV,MAAM4D,sBAEvC,OACI,qCACI,sBAAK/C,UAAU,yBAAf,UACI,qBAAKA,UAAU,QAAQ4B,QAAS,kBAAMmB,EAAsB,cAA5D,SACI,cAACxC,EAAD,CAAOP,UAAU,0BAErB,qBAAKA,UAAU,UAAU4B,QAAS,kBAAMoB,EAAuB,cAA/D,SACI,cAACxC,EAAD,CAAQR,UAAU,6BAK1B,qBAAKA,UAAU,oBAAf,SACI,gCACI,sBAAKA,UAAU,SAAf,UACI,oBAAG0B,GAAG,aAAN,qBACY,sBAAMA,GAAG,UAAT,SAAoB7B,KAAKF,MAAMyD,kBAE3C,mBAAG1B,GAAG,YAAN,2DAIJ,qBAAK5B,SAAU,kBAAMqE,EAAoB,YAAzC,SACI,cAAC,EAAD,CAAWvE,WAAYC,KAAKD,2B,GA/EhBU,aCHzB,SAAS8D,IACpB,OACI,wBAAQpE,UAAU,MAAlB,oB,ICDaqE,E,4JACjB,WAEI,IAAMC,EAAyBzE,KAAKV,MAAMmF,uBAE1C,OACI,qCACK,qBAAKtE,UAAU,yBAAf,SACG,qBAAKA,UAAU,QAAQ4B,QAAS,kBAAM0C,EAAuB,eAA7D,SACI,cAACF,EAAD,CAAcpE,UAAU,4BAIhC,sBAAKA,UAAU,SAAf,UACQ,oBAAG0B,GAAG,aAAN,qBACY,sBAAMA,GAAG,UAAT,mBAEZ,mBAAGA,GAAG,YAAN,2DAMR,qBAAK1B,UAAU,cAAf,SACI,+BACI,+BACI,qDAGA,wFAGA,uBACA,kwBAeJ,+BACI,oDAGA,qEAGA,uBACA,0wBAWA,gFAGA,uBACA,yeAUJ,+BACI,iDAGA,yFAGA,uBACA,8XAMA,2DAGA,uBACI,+BACI,iEACA,qDACA,4JAEJ,0BAGR,+BACI,2CAGA,2EAGA,uBACA,inBAUA,0EAGA,uBACA,4KAMJ,+BACI,yDAGA,4EAGA,uBACA,ybASJ,+BACI,iDAGA,2FAGA,uBACA,+BACI,0LACA,iHACA,uIAEJ,0BAGJ,+BACI,gDAGA,+GAGA,uBACA,+BACI,+HACA,qEACA,uHAEJ,0BAGJ,+BACI,+CAGA,0FAGA,uBACA,+BACI,iLACA,8EACA,gHAEJ,0BAGJ,+BACI,iDAGA,6FAGA,uBACA,itB,GAhNWM,a,QCGlBiE,E,4JACjB,WAEI,IAKMxB,EAAwBlD,KAAKV,MAAM4D,sBACnCuB,EAAyBzE,KAAKV,MAAMmF,uBAE1C,OACI,qCACI,sBAAKtE,UAAU,yBAAf,UACI,qBAAKA,UAAU,QAAQ4B,QAAS,kBAAMmB,EAAsB,cAA5D,SACI,cAACxC,EAAD,CAAOP,UAAU,0BAErB,qBAAKA,UAAU,UAAU4B,QAAS,kBAAM0C,EAAuB,eAA/D,SACI,cAACF,EAAD,CAAcpE,UAAU,6BAKhC,qBAAKA,UAAU,mBAAf,SACI,gCACI,sBAAKA,UAAU,SAAf,UACI,oBAAG0B,GAAG,aAAN,qBACY,sBAAMA,GAAG,UAAT,mBAEZ,mBAAGA,GAAG,YAAN,2DAKJ,eAAC3B,EAAA,EAAD,CAAMD,SA/BD,SAACT,GAElB,OADAA,EAAEK,iBACKoB,MAAM,wBA6BD,UACI,eAACf,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKyE,MAAN,iCACA,cAACzE,EAAA,EAAKG,QAAN,CAAcE,YAAY,2BAG9B,eAACL,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKyE,MAAN,uBACA,cAACzE,EAAA,EAAKG,QAAN,CAAcC,KAAK,WAAWC,YAAY,gBAE9C,cAACqE,EAAA,EAAD,CAAQ/C,GAAG,YAAYvB,KAAK,SAA5B,mC,GA5CWG,aCClBoE,E,kDACjB,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAMV4D,sBAAwB,SAACH,GACrB,EAAKtD,SAAS,CAACqF,YAAY/B,KARZ,EAWnBI,uBAAyB,SAACJ,GACtB,EAAKtD,SAAS,CAACqF,YAAY/B,KAZZ,EAenB0B,uBAAyB,SAAC1B,GACtB,EAAKtD,SAAS,CAACqF,YAAY/B,KAd3B,EAAKjD,MAAQ,CACTgF,YAAa,cAHF,E,0CAwBnB,WAII,IAcMC,EAdQ,CACV,WAAc,cAAC,EAAD,CAAc7B,sBAAuBlD,KAAKkD,sBAC5BC,uBAAwBnD,KAAKmD,yBAGzD,QAAW,cAAC,EAAD,CAAiBD,sBAAuBlD,KAAKkD,sBAC5BC,uBAAwBnD,KAAKmD,yBAEzD,UAAa,cAAC,EAAD,CAAesB,uBAAwBzE,KAAKyE,yBAEzD,UAAa,cAAC,EAAD,CAAevB,sBAAuBlD,KAAKkD,sBAC5BuB,uBAAwBzE,KAAKyE,0BAGnCzE,KAAKF,MAAMgF,aAErC,OACI,qBAAK3E,UAAU,UAAf,SACK4E,Q,GA/CiBtE,aCKnBuE,MARf,WACE,OACE,qBAAK7E,UAAU,MAAf,SACE,cAAC,EAAD,OCFN8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ffd5b1c5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap'\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             value: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({value: e.target.value})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if(this.state.value < 1) return\n    }\n  \n    \n    render() {\n\n        const passSubmit = this.props.passSubmit\n        const value = this.state.value\n        \n        return (\n            <div onSubmit = {() => passSubmit(value)}>\n                <Form className=\"search-box\" onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Control type=\"input\" placeholder=\"Search for anything...we'll do the rest\" onChange={this.handleChange} value={this.state.value}/>\n                    </Form.Group>\n                </Form>\n            </div>\n           \n        )\n    }\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <button className=\"btn\">\n             About \n        </button>\n    )\n}\n\n","import React from 'react'\n\nexport default function SignIn() {\n    return (\n        <button className=\"btn\">\n            Sign In\n        </button>\n    )\n}\n","import React, { Component } from 'react'\nimport data from '../businesses.json'\nimport { Form } from 'react-bootstrap'\n\n\nexport default class BusinessList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            value:\"\",\n            searched: \"\"\n        }\n    }\n\n    onChange = (e) => {\n        console.log(e.target.value)\n        this.setState({value:e.target.value})\n    } \n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            searched: this.state.value\n        })\n    }\n\n    \n    render() {\n\n        const fakeRedirect = () => {\n            alert(\"fake redirect to external business\")\n        }\n    \n        const fakeFilterDrop= (e) => {\n            e.preventDefault()\n            alert('This is a fake filter popout. In here would be options to filter by business type, price range, distance, and sustainability score, among possible others.')\n        }\n        \n        const map = data.map((business) => {\n    \n            const tagMap = business.businessType.map((bus) => {\n                return (<li className=\"horizontal-li list\" key={bus}> \n                            <a style={{cursor:\"pointer\"}} href=\"#\"> #{bus} </a>\n                        </li>)\n            })\n    \n            const featuredSpan = (business.promoted) ? <span id=\"promoted\">Popular!</span> : null\n            const featuredClass = (business.promoted) ? \"list side-card promoted\" : \"list side-card borderB\"\n    \n            return (\n                        <li key={business.distance} className={featuredClass}>\n                            <div className=\"side-card\">\n    \n                                {featuredSpan}\n    \n                                <h5 onClick={fakeRedirect}>\n                                    {business.name}\n                                </h5>\n    \n    \n                                <span id=\"score\">\n                                    <em> \n                                        <b> \n                                                {business.score}/10 &nbsp;\n                                        </b> \n                                                sustainability\n                                    </em>\n                                </span>\n    \n                                <div> \n                                    <ul className=\"horizontal\">  \n                                        {tagMap}\n                                    </ul> \n                                </div>\n    \n                                <div className=\"icons-list\">\n                                    <ul className=\"horizontal\">\n                                        <li className=\"horizontal-li list icon\"> <a href=\"#\"> Comment </a>  </li>\n                                        <li className=\"horizontal-li list icon\"> <a href=\"#\"> Favorite </a>    </li>\n                                        <li className=\"horizontal-li list icon\"> <a href=\"#\"> Photos </a>    </li>\n                                        <li className=\"horizontal-li list icon\"> <a href=\"#\"> Socials </a>    </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </li>\n                )\n            }\n        )\n\n        const resultBox = <div style={{textAlign:\"center\"}}> \n                            Results for: {this.state.searched}\n                        </div>\n\n        const results = this.state.searched.length > 1 ? resultBox : null\n\n    return (\n            <>\n                <div className=\"side-nav-top-area\">\n            \n                <Form style={{display: \"inline\"}} onSubmit={this.onSubmit}>\n                    <Form.Group className=\"form-group-side-nav\">\n                        <Form.Control type=\"input\" placeholder=\"Search...\" value={this.state.value} onChange={this.onChange}/>\n                    </Form.Group>\n                </Form>\n\n                <button className=\"btn\" onClick={fakeFilterDrop}> Filters </button>\n                </div>\n                {results}\n                <ul>\n                    {map}\n                </ul>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport BusinessList from './BusinessList'\n\nexport default class MapBody extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             open: false\n        }\n    }\n\n    changeView = (e) => {\n       \n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    render() {\n\n\n\n        const side = <div className=\"side-nav\">\n                            <BusinessList />\n                     </div>\n\n\n        const showingCondition = (this.state.open) ? side : null\n        const buttonTextCondition = (this.state.open) ? \"Show Map View : )\" : \"Show List View : )\"\n       \n\n        return (\n    \n            <div className=\"map-container\"> \n                {showingCondition}\n                <button className=\"btn\" id=\"nav-btn\" onClick={this.changeView}> {buttonTextCondition} </button>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport SearchBar from './SearchBar'\nimport About from './About'\nimport SignIn from './SignIn'\nimport MapBody from './MapBody'\nimport BusinessList from './BusinessList'\n\n\nexport default class MapPage extends PureComponent {\n    constructor(props) {\n    super(props)\n\n        this.state = {\n            currentSearch: \"\"\n        }\n    }\n\n\n    passSubmit = (passed) => {\n        this.setState({currentSearch:passed})\n    }\n\n    passNavSubmit = (passed) => {\n        console.log(passed)\n        this.setState({currentSearch:passed})\n    }\n    \n    \n    render() {\n\n        const handleAboutPageChange = this.props.handleAboutPageChange\n        const handleSignInPageChange = this.props.handleSignInPageChange\n        const areResults = <p>results for: \"{this.state.currentSearch}\"</p>\n\n        const results = this.state.currentSearch.length > 1 ? areResults : null\n\n        return (\n            <>\n                <div className=\"psuedo-nav-map-page\">\n            \n                    <div className=\"map-page-title-button-container\">\n\n                    <h1 id=\"title-searched\">\n                        Sustain.<span id=\"current\">us</span>\n                    </h1>\n                        <div className=\"map-page-button-container\"> \n                            <div onClick={() => handleAboutPageChange('aboutPage')} style={{display:\"inline\"}}>\n                                <About />\n                            </div>\n                            <div onClick={() => handleSignInPageChange('loginPage')} style={{display:\"inline\"}}>\n                                <SignIn/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"search-bar-map-page\">\n                        <SearchBar passSubmit={this.passSubmit}/>    \n                    </div>  \n\n                    <div className=\"results-text-box\">\n                        {results}\n                    </div>               \n                </div>\n                \n                <div className=\"google-map\"> \n                    <MapBody />\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport SearchBar from './SearchBar'\nimport About from './About'\nimport SignIn from './SignIn'\n\nexport default class SearchPage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             currentTitle: \"us\",\n             currentSearch: null\n        }\n    }\n\n    componentDidMount() {\n\n        const usOptions = [\"the world\",\"the environement\", \"the oceans\", \"the forests\", \"ourselves\"]\n\n        function getNewOption(current) {\n            const randomOption = Math.floor(Math.random() * usOptions.length)\n            const newer = usOptions[randomOption]\n            if(current === newer) {\n              return getNewOption(current)\n            } else {\n                return newer\n            }\n        }\n\n        let count = 0\n\n        setTimeout(() => {\n\n            let randomTime = Math.random() * 2500 + 1500\n\n            const interval = setInterval(() => {\n                    count++\n                    randomTime = Math.random() * 2500 + 1500\n                 if(count > 5) {\n                    this.setState({currentTitle:\"us\"})\n                    clearInterval(interval)\n                } else {\n                    this.setState({\n                        currentTitle: getNewOption(this.state.current)\n                    })\n                }\n            }, randomTime);\n        }, 4000)\n    }\n\n    passSubmit = (passed) => {\n        this.setState({currentSearch:passed})\n        console.log(passed)\n    }\n    \n    render() {\n\n        const handleAboutPageChange = this.props.handleAboutPageChange\n        const handleSignInPageChange = this.props.handleSignInPageChange\n        const handleMapPageChange = this.props.handleAboutPageChange \n        \n        return (\n            <>\n                <div className=\"psuedo-nav-search-page\">\n                    <div className=\"about\" onClick={() => handleAboutPageChange('aboutPage')}>\n                        <About className=\"search-page-buttons\"/>\n                    </div>\n                    <div className=\"sign-in\" onClick={() => handleSignInPageChange('loginPage')}>\n                        <SignIn className=\"search-page-buttons\"/>    \n                    </div>\n                </div>\n\n\n                <div className=\"search-box-center\" > \n                    <div>\n                        <div className=\"titles\"> \n                            <p id=\"title-home\" >\n                                Sustain.<span id=\"current\">{this.state.currentTitle}</span>\n                            </p>\n                            <p id=\"sub-title\">\n                                Connecting you with sustainable businesses\n                            </p>\n                        </div>\n                        <div onSubmit={() => handleMapPageChange('mapPage')}>\n                            <SearchBar passSubmit={this.passSubmit}/>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n","import React from 'react'\n\nexport default function SearchButton() {\n    return (\n        <button className=\"btn\">\n             Search\n        </button>\n    )\n}\n","import React, { Component } from 'react'\nimport SearchButton from './SearchButton'\n\nexport default class AboutPage extends Component {\n    render() {\n\n        const handleSearchPageChange = this.props.handleSearchPageChange\n\n        return (\n            <>\n                 <div className=\"psuedo-nav-search-page\">\n                    <div className=\"about\" onClick={() => handleSearchPageChange('searchPage')}>\n                        <SearchButton className=\"search-page-buttons\"/>\n                    </div>\n                </div>\n            \n                <div className=\"titles\"> \n                        <p id=\"title-home\" >\n                            Sustain.<span id=\"current\">us</span>\n                        </p>\n                        <p id=\"sub-title\">\n                            Connecting you with sustainable businesses\n                        </p>\n                </div>\n    \n    \n                <div className=\"about-field\">\n                    <ol>\n                        <li>\n                            <h3>\n                                Customer Segements:\n                            </h3>\n                            <h5>\n                                Who are our customers / who are we creating value for?\n                            </h5>\n                            <br />\n                            <p>\n                                Customers are the relatively niche market of vegan, vegan leaning, \n                                vegetarian, vegetarian leaning, and generally environmentally minded \n                                individuals who desire the choice of sustainable and eco-friendly \n                                food, products, and store options over traditional. Though this is a \n                                niche market the trend for environmentally minded products and food \n                                is unlikely to decrease. Our most important customers are those who would \n                                be willing to always choose sustainability over easier / cheaper / less \n                                morally fulfilling options. Additionally, and importantly, our customers \n                                are also the sustainable business themselves, as they will derive more \n                                business from the exposure on our application, allowing us to generate \n                                revenue via their channel as well. \n                            </p>\n                        </li>\n                       \n                        <li>\n                            <h3>\n                                Value Proposition:\n                            </h3>\n                            <h5>\n                                What are our products and services? \n                            </h5>\n                            <br />\n                            <p>\n                                Our service is a web / mobile app that offers ease of connection for consumers \n                                to sustainable businesses that better suit their environmentally driven purchasing\n                                desires. The web app is built off the Google Maps API and offers the user a more \n                                rounded and specifically sustainable consumer experience. The alternative is often \n                                simply googling sustainable keywords (e.x. “vegan food near me”, “sustainable stores \n                                in Midtown”, “organic grocery near East Village”) in Google Maps and hoping for the \n                                best. At heart, this application is a curated hub of sustainable businesses. It acts \n                                as a tool for those who wish to practice more sustainable consumer habits \n                                and drives revenue / awareness for businesses in that sector. \n                            </p>\n                            <h5>\n                                What is the job we get done for our customers?\n                            </h5>\n                            <br />\n                            <p>\n                                The main job that is done is that of connection. Based on my own personal experiences \n                                when trying to navigate the modern consumer landscape, sustainable options are still \n                                rarely at the forefront, though the demand is clearly present. While the internet \n                                exists and finding exactly what you’re looking for is easier than it’s ever been, \n                                it’s still far from perfect. Our service works to strengthen our ability to practice \n                                sustainable lives. \n                            </p>\n                        </li>\n    \n                        <li>\n                            <h3>\n                                Revenu Streams:\n                            </h3>\n                            <h5>\n                                For what value are our customers really willing to pay?\n                            </h5>\n                            <br />\n                            <p>\n                                The customers, both consumer and commercial, are willing to pay for this aforementioned \n                                ease of connection. It is mutually beneficial for the business and consumers to connect. \n                                Expediting the process is invaluable for a business because they thrive on consumer spending.\n                                The consumer also receives value by getting exactly what they are looking for.\n                            </p>\n                            <h5>\n                               Possible revenue Streams:\n                            </h5>\n                            <br />\n                                <ol>\n                                    <li> Exposure payment from business</li>\n                                    <li> In app advertising</li>\n                                    <li> Subscription based revenue (i.e. a few dollars a month for specific deals / coupons at various sustainable businesses)</li>\n                                </ol>\n                                <br />\n                        </li>\n    \n                        <li>\n                            <h3>\n                               Channels: \n                            </h3>\n                            <h5>\n                                How do we communicate with our customers? \t\n                            </h5>\n                            <br />\n                            <p>\n                                We communicate with our customers through in-app promotions and advertisements. \n                                However, this only occurs after they've been brought into the Sustain.us ecosystem \n                                through  instagram and facebook ads. Additional channels in which we recruit \n                                customers may be in person advertising (think QR code mini posters) at the business \n                                we’re promoting, as well as partnerships with the businesses themselves who can \n                                promote the service via their own social media channels. Additional channels to \n                                consider would be SEO, targeted blogs, and community building (i.e. a booth at a farmer’s\n                                market). \n                            </p>\n                            <h5>\n                                How do we deliver our value proposition?\n                            </h5>\n                            <br />\n                            <p>\n                                We deliver our value proposition mainly via the app. Once customers have been onboarded all \n                                interaction takes place in this environment. \n                            </p>\n                        </li>\n    \n                        <li>\n                            <h3>\n                                Customer Relationships:\n                            </h3>\n                            <h5>\n                                How often will we interact with our users? \n                            </h5>\n                            <br />\n                            <p>\n                                The goal would be to have new promotions and deals for consumers using the app every \n                                other day or so, with larger promotions and more involved activities one a month. \n                                On the “about” page there could also be an automated Q&A service. The sustain.us business\n                                model is rather hands off, but with more consistent updates (say adding new businesses to \n                                the map) happening constantly in the background. \n                            </p>\n                        </li>\n    \n                        <li>\n                            <h3>\n                                Key activities:\n                            </h3>\n                            <h5>\n                                What do you do, and how often, to run the business model?\n                            </h5>\n                            <br />\n                            <ol>\n                                <li>Daily: updating the businesses in any given area | highlighting a sustainable business each day for a specific reason ( this could be moved to weekly). </li>\n                                <li>Weekly: changing promotions for relevant businesses and products in given areas</li>\n                                <li>Monthly: working with the businesses in any given area, setting up promotions in physical spaces. </li>\n                            </ol>\n                            <br/ >\n                        </li>\n    \n                        <li>\n                            <h3>\n                                Key Resources:\n                            </h3>\n                            <h5>\n                                Who are the people, knowledge, means, and money you need to run the business?\n                            </h5>\n                            <br />\n                            <ol>\n                                <li>People: developers, sustainably minded individuals /businesses, designers, technical writers </li>\n                                <li>Means: startup capital, web servers</li>\n                                <li>Knowledge: of local areas and their sustainable products, businesses, events, etc </li>\n                            </ol>\n                            <br/ >\n                        </li>\n    \n                        <li>\n                            <h3>\n                                Key Partners: \n                            </h3>\n                            <h5>\n                                Who are the partners we CANNOT do this business without? \n                            </h5>\n                            <br />\n                            <ol>\n                                <li>All sustainable businesses in a given area, especially those who  we would work with to promote and generate revenue through customer traffic. </li>\n                                <li>Web hosting partner for large user traffic  </li>\n                                <li>Google API -- without this the business would fall apart / is not possible </li>\n                            </ol>\n                            <br />\n                        </li>\n    \n                        <li>\n                            <h3>\n                               Cost Structure: \n                            </h3>\n                            <h5>\n                                What are the main costs and what is the relative breakdown? \n                            </h5>\n                            <br />\n                            <p>\n                                Initial startup cost could be done with relatively low investment. \n                                At first the application could be local only (say NYC, LA, Seattle), \n                                which would cut down on costs exponentially. The main cost of operating \n                                at this time would likely come from sourcing the hundreds if not \n                                thousands of sustainable businesses and properly integrating them into \n                                our app. This would be a large and time consuming undertaking in any \n                                metropolitan area and would require a number of people to research and \n                                write the material. The subsequent largest cost would be business related \n                                employees “on the ground” interacting with the various sustainable businesses \n                                and setting up  promotions.\n                            </p>\n                        </li>\n                    </ol>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport About from './About'\nimport SearchButton from './SearchButton'\n\n\nexport default class LoginPage extends Component {\n    render() {\n        \n        const handleSubmit = (e) => {\n            e.preventDefault()\n            return alert(\"Fake login redirect\")\n        }\n\n        const handleAboutPageChange = this.props.handleAboutPageChange\n        const handleSearchPageChange = this.props.handleSearchPageChange\n\n        return (\n            <>\n                <div className=\"psuedo-nav-search-page\">\n                    <div className=\"about\" onClick={() => handleAboutPageChange('aboutPage')}>\n                        <About className=\"search-page-buttons\"/>\n                    </div>\n                    <div className=\"sign-in\" onClick={() => handleSearchPageChange('searchPage')}>\n                        <SearchButton className=\"search-page-buttons\"/>\n                    </div>\n                </div>\n\n    \n                <div className=\"login-box-center\" > \n                    <div>\n                        <div className=\"titles\"> \n                            <p id=\"title-home\" >\n                                Sustain.<span id=\"current\">us</span>\n                            </p>\n                            <p id=\"sub-title\">\n                                Connecting you with sustainable businesses\n                            </p>\n                        </div>\n                        \n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>User Name or email</Form.Label>\n                                <Form.Control placeholder=\"Enter user or email\" />\n                            </Form.Group>\n    \n                            <Form.Group >\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\n                            </Form.Group>\n                            <Button id=\"login-btn\" type=\"submit\">\n                                Log in\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport MapPage from './MapPage'\nimport SearchPage from './SearchPage'\nimport AboutPage from './AboutPage'\nimport LoginPage from './LoginPage'\n\n\nexport default class Main extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentPage: \"searchPage\"\n        }\n    }\n\n    handleAboutPageChange = (passed) => {\n        this.setState({currentPage:passed})\n    }\n\n    handleSignInPageChange = (passed) => {\n        this.setState({currentPage:passed})\n    }\n\n    handleSearchPageChange = (passed) => {\n        this.setState({currentPage:passed})\n    }\n\n    // handleMapPageChange = (passed) => {\n    //     this.setState({currentPage: passed})\n    // }\n    \n    \n    render() {\n\n\n\n        const pages = {\n            'searchPage': <SearchPage   handleAboutPageChange={this.handleAboutPageChange} \n                                        handleSignInPageChange={this.handleSignInPageChange}\n                                        />,\n\n            'mapPage': <MapPage         handleAboutPageChange={this.handleAboutPageChange} \n                                        handleSignInPageChange={this.handleSignInPageChange}/>,\n\n            'aboutPage': <AboutPage     handleSearchPageChange={this.handleSearchPageChange}/>,\n\n            'loginPage': <LoginPage     handleAboutPageChange={this.handleAboutPageChange}\n                                        handleSearchPageChange={this.handleSearchPageChange}/>\n        }\n\n        const PageDisplay = pages[this.state.currentPage]\n\n        return (\n            <div className=\"display\">\n                {PageDisplay}\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from  './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}